# Soliguide: Useful information for those who need it
#
# SPDX-FileCopyrightText: Â© 2024 Solinum
#
# SPDX-License-Identifier: AGPL-3.0-only
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
name: _Extract docker metadata

on:
  workflow_call:
    inputs:
      image_name:
        description: Docker image name
        type: string
        default: ""
      suffix:
        description: Docker image tag suffix
        type: string
        default: ""
    outputs:
      tags:
        value: ${{ jobs.docker_meta.outputs.tags }}
      labels:
        value: ${{ jobs.docker_meta.outputs.labels }}
      annotations:
        value: ${{ jobs.docker_meta.outputs.annotations }}
      json:
        value: ${{ jobs.docker_meta.outputs.json }}

jobs:
  docker_meta:
    name: Docker meta for ${{ inputs.image_name }}${{ inputs.suffix }}
    runs-on: ubuntu-latest
    permissions: {}
    outputs:
      tags: ${{ startsWith(github.ref, 'refs/tags/') && steps.meta_tags.outputs.tags || steps.meta.outputs.tags }}
      labels: ${{ startsWith(github.ref, 'refs/tags/') && steps.meta_tags.outputs.labels || steps.meta.outputs.labels }}
      annotations: ${{ startsWith(github.ref, 'refs/tags/') && steps.meta_tags.outputs.annotations || steps.meta.outputs.annotations }}
      json: ${{ startsWith(github.ref, 'refs/tags/') && steps.meta_tags.outputs.json || steps.meta.outputs.json }}
    steps:
      # For tags we simply use it, no sha needed
      - id: meta_tags
        uses: docker/metadata-action@v5
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          images: ${{ inputs.image_name }}
          # disbale latest, we've no need for it
          flavor: latest=false
          tags: type=ref,event=tag,suffix=${{ inputs.suffix }}
      # For branches and pull_request we use both standard tag + tag with sha appended
      - id: meta_classic
        name: Compute general tag
        uses: docker/metadata-action@v5
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        with:
          # disbale latest, we've no need for it
          flavor: latest=false
          tags: |
            # No sha, latest etc.
            # branch event
            type=ref,event=branch
            # pull request event
            type=ref,event=pr
      - id: meta
        name: Assemble general tag + tag with sha
        uses: docker/metadata-action@v5
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        with:
          images: ${{ inputs.image_name }}
          # disbale latest, we've no need for it
          flavor: latest=false
          tags: |
            # pr-00000
            type=ref,event=pr,suffix=${{ inputs.suffix }}
            # develop
            type=ref,event=branch,suffix=${{ inputs.suffix }}
            # pr-00000-<short_sha> or develop--<short_sha>
            type=sha,prefix=${{ steps.meta_classic.outputs.tags }}-,suffix=${{ inputs.suffix }}
